name: Django CI/CD

on:
  push:
    branches:
      - Secuvast-Prod
  pull_request:
    branches:
      - Secuvast-Prod

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DJANGO_DEBUG: 'False'
      DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }} #This is the Test Database URL from Neon, Secret storage in Github Action Secrets
      NEON_API_KEY: ${{ secrets.NEON_API_KEY }} #This is the Neon API Key, Secret storage in Github Action Secrets
      NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }} #This is the Neon Project ID, Secret storage in Github Action Secrets
      NEON_GIT_BRANCH: 'Secuvast-Test-Delete' #This is the branch of the Neon Database
      NEON_PROD_BRANCH: 'Secuvast-Prod' #This is the branch of the Neon Database
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11'

      - name: Install Neon CLI
        run: |
          npm install -g neonctl
      
      - name: Delete previous Neon Database Branch
        continue-on-error: true
        run: |
          neonctl branches delete "${{env.NEON_GIT_BRANCH}}"  --project-id "${{env.NEON_PROJECT_ID}}" 
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}

      - name: Create new Github Actions branch
        run: |
          neonctl branches create --name "${{env.NEON_GIT_BRANCH}}" --parent "${{env.NEON_PROD_BRANCH}}" --project-id "${{env.NEON_PROJECT_ID}}"

      - name: Database URL ENV val for new Github Actions branch
        run: |
          MY_NEON_CONN_STRING=$(neonctl connection-string --branch "${{env.NEON_GIT_BRANCH}}" --parent "${{env.NEON_PROD_BRANCH}}" --project-id "${{env.NEON_PROJECT_ID}}")
          echo "DATABASE_URL=$MY_NEON_CONN_STRING" >> $GITHUB_ENV
      - name: Setup Django Secret Key
        run: |
          mykey=$(openssl rand -base64 32)
          echo "DJANGO_SECRET_KEY=$mykey" >> $GITHUB_ENV

      - name: Show Environment Variables
        run: |
          echo ${{ env.DATABASE_URL }}
          echo $DATABASE_URL

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          # CORRECCIÃ“N: Apuntamos a la ruta correcta del archivo
          python -m pip install -r saas/requirements.txt

      - name: Run Django Tests
       
        working-directory: ./saas/src

        run: |
          python manage.py test --keepdb 

      - name: clean UP Branch
        continue-on-error: true
        run: |
          neonctl branches delete "${{env.NEON_GIT_BRANCH}}"  --project-id "${{env.NEON_PROJECT_ID}}"
