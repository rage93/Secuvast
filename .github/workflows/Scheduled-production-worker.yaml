name: Django CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Scheduled-production-worker:
    runs-on: ubuntu-latest

    env:
      DJANGO_DEBUG: 'False'
      NEON_TEST_BRANCH: 'Secuvast-Test-Delete'
      NEON_PROD_BRANCH: 'Secuvast-Prod'
      # Secrets from GitHub Settings
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
      NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
      # This DATABASE_URL is just a default, it will be overwritten
      DATABASE_URL: ${{ secrets.DATABASE_URL }} 

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Neon CLI
        run: npm install -g neonctl
      
      # ======================= PASO DE DIAGNÓSTICO =======================
      # Este nuevo paso le pregunta a Neon: "¿Qué ramas puedes ver?"
      - name: List Available Neon Branches (DEBUG)
        run: |
          echo "Checking for branches in project ${{ secrets.NEON_PROJECT_ID }}"
          neonctl branches list --project-id "${{ secrets.NEON_PROJECT_ID }}"
        env:
          # Le pasamos la API Key para que pueda autenticarse
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
      # ===================================================================

      - name: Get Connection String for Test Branch
        run: |
          DB_URL=$(neonctl connection-string \
            --branch "${{ env.NEON_TEST_BRANCH }}" \
            --database-name "neondb" \
            --project-id "${{ secrets.NEON_PROJECT_ID }}")
          echo "DATABASE_URL=$DB_URL" >> $GITHUB_ENV
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}

      - name: Setup Django Secret Key
        run: echo "DJANGO_SECRET_KEY=$(openssl rand -base64 32)" >> $GITHUB_ENV

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r saas/requirements.txt
      
      # Tu paso para sincronizar suscripciones
      - name: Django users Sync Stripe Subscriptions
        if: github.event_name == 'schedule' && github.event.schedule == '0 1,12 * * *'
        working-directory: ./saas/src
        run: python manage.py sync_user_subs --day-start 0 --day-end 1

      # Tu paso para limpiar suscripciones "dangling"
      - name: Django users Clear Dangling Stripe Subscriptions
        if: github.event_name == 'schedule' && github.event.schedule == '0 4 1 * *'
        working-directory: ./saas/src
        run: |
          python manage.py clear_dangling_stripe_subs --day-start 0 --day-end 0